{
  "version": 3,
  "sources": ["../../../pkgs/web/crud/src/list/mobile/BaseFilterMobile.tsx"],
  "sourcesContent": ["/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nimport { Button, Searchbar } from 'framework7-react'\nimport { Context, isValidElement, useContext, useEffect, useRef } from 'react'\nimport { BaseWindow } from 'web-init/src/window'\nimport { useRender } from 'web-utils/src/useRender'\nimport { ICRUDContext } from '../../../../ext/types/__crud'\nimport { IBaseListContext } from '../../../../ext/types/__list'\nimport { lang } from '../../lang/lang'\n\ndeclare const window: BaseWindow\n\nexport const BaseFilterMobile = ({\n  ctx,\n}: {\n  ctx: Context<IBaseListContext>\n}) => {\n  const _ = useRef({\n    init: false,\n  })\n\n  const state = useContext(ctx)\n  const meta = _.current\n  const render = useRender()\n  useEffect(() => {\n    const firstCol = state.table.columns[0]\n    if (firstCol) {\n      if (!state.db.params) {\n        state.db.params = {}\n      }\n      if (!state.db.params.where) {\n        state.db.params.where = {} as any\n      }\n\n      const where = state.db.params.where\n      if (where[firstCol] && where[firstCol].contains) {\n        state.filter.quickSearch = where[firstCol].contains\n      }\n    }\n    meta.init = true\n    render()\n  }, [])\n\n  if (!meta.init) return null\n\n  const canCreate = state.header?.action?.create\n  let create = null as any\n  if (canCreate !== false) {\n    if (typeof canCreate === 'function') {\n      create = canCreate({ state, save: null, data: null })\n    } else if (typeof create === 'object') {\n      if (isValidElement(canCreate)) {\n        create = canCreate\n      } else {\n        create = (\n          <Button\n            raised\n            large\n            onClick={() => {\n              const parent = state.tree.parent as ICRUDContext\n              parent.crud.setMode('form', {})\n              parent.component.render()\n            }}\n            className=\"flex flex-row items-center\"\n            css={css`\n              margin: 10px 0px 10px 5px;\n              width: 120px;\n              border-radius: 5px;\n              height: 30px;\n              line-height: 30px;\n            `}\n            children={\n              <>\n                <span\n                  css={css`\n                    font-size: 22px;\n                    line-height: 0px;\n                    margin-top: -4px;\n                  `}\n                >\n                  +\n                </span>\n                <span\n                  css={css`\n                    font-size: 14px;\n                    text-transform: initial;\n                  `}\n                >\n                  {typeof state.header?.action?.create === 'string'\n                    ? state.header.action.create\n                    : lang('Tambah', 'id')}\n                </span>\n              </>\n            }\n            {...((typeof create === 'object' && !isValidElement(create)\n              ? create\n              : {}) as any)}\n          />\n        )\n      }\n    }\n  }\n  return (\n    <>\n      <Searchbar\n        onClickClear={() => {\n          state.filter.quickSearch = ''\n          render()\n          state.component.render()\n        }}\n        value={state.filter.quickSearch || ''}\n        searchContainer=\".search-list\"\n        searchIn=\".item-link\"\n        placeholder={`${state.filter.quickSearchTitle || 'Cari'}`}\n        disableButton={false}\n        clearButton={true}\n        css={css`\n          .searchbar-input-wrap input {\n            border-radius: 5px !important;\n          }\n        `}\n        onChange={(e) => {\n          const text = e.target.value\n          const firstCol = state.table.columns[0]\n          if (firstCol) {\n            if (!state.db.params.where) {\n              state.db.params.where = {} as any\n            }\n\n            const where = {}\n\n            if (text) {\n              where[firstCol] = {\n                contains: text,\n                mode: 'insensitive',\n                found: false,\n              }\n            } else {\n              delete where[firstCol]\n            }\n\n            if (state.table.columns[1]) {\n              const secondCol = state.table.columns[1]\n\n              if (text) {\n                where[secondCol] = {\n                  contains: text,\n                  mode: 'insensitive',\n                  found: false,\n                }\n              } else {\n                delete where[secondCol]\n              }\n            }\n\n            let or = state.db.params.where.OR\n            if (!or) {\n              state.db.params.where.OR = []\n              or = state.db.params.where.OR\n            }\n\n            for (let orCol of or) {\n              for (let [k, v] of Object.entries(orCol)) {\n                if (where[k]) {\n                  where[k].found = true\n                }\n              }\n            }\n\n            for (let [k, v] of Object.entries(where) as any) {\n              delete v.found\n              or.push({ [k]: v })\n            }\n\n            state.db.paging.reset()\n            state.filter.quickSearch = text\n            state.db.query()\n          } else {\n            state.filter.quickSearch = text\n            render()\n            state.component.render()\n          }\n        }}\n      >\n        {create}\n      </Searchbar>\n    </>\n  )\n}\n\nexport const searchObject = (row: any, text: string) => {\n  let found = false\n  for (let [k, v] of Object.entries(row) as any) {\n    if (v && v.toString && v.toString().toLowerCase().indexOf(text) >= 0) {\n      found = true\n      break\n    }\n    if (typeof v === 'object' && !!v && !k.startsWith('_')) {\n      if (searchObject(v, text)) {\n        found = true\n        break\n      }\n    }\n  }\n\n  return found\n}\n"],
  "mappings": "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",
  "names": []
}
