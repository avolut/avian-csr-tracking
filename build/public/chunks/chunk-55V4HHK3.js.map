{
  "version": 3,
  "sources": ["../../../pkgs/web/crud/src/form/web/fields/Winfo.tsx", "../../../pkgs/web/crud/src/form/web/fields/WSelect.tsx"],
  "sourcesContent": ["/** @jsx jsx */\nimport { jsx, css } from '@emotion/react'\nimport { useContext } from 'react'\nimport NiceValue from '../../../legacy/NiceValue'\nimport { IBaseFieldProps } from '../../../../../ext/types/__form'\n\nexport const WInfo = ({ ctx, name }: IBaseFieldProps) => {\n  const form = useContext(ctx)\n  const field = form.config.fields[name]\n\n  if (!field) return null\n  const state = field.state\n\n  return (\n    <WBox disabled>\n      {typeof state.value === 'object' ? (\n        <NiceValue value={state.value} />\n      ) : (\n        state.value\n      )}\n    </WBox>\n  )\n}\n\nexport const WBox = ({\n  children,\n  className,\n  disabled,\n}: {\n  children: any\n  className?: string\n  disabled?: boolean\n}) => {\n  return (\n    <div\n      className={`${className} flex flex-1 items-center border rounded-sm text-xs p-2\n      ${disabled ? 'border-gray-300 bg-gray-50' : 'border-gray-700 bg-white'}\n      `}\n      css={css`\n        height: 32px;\n      `}\n    >\n      {children}\n    </div>\n  )\n}\n", "/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nimport { Callout, Icon, Label, Spinner, TextField } from '@fluentui/react'\nimport { waitUntil } from 'libs'\nimport { ReactElement, useContext, useEffect, useRef } from 'react'\nimport { BaseWindow } from 'web-init/src/window'\nimport { useRender } from 'web-utils/src/useRender'\nimport { BaseList } from '../../../list/BaseList'\nimport { IBaseFieldProps } from '../../../../../ext/types/__form'\nimport { WBox } from './Winfo'\nimport set from 'lodash.set'\ndeclare const window: BaseWindow\n\nexport const WSelect = ({ name, internalChange, ctx }: IBaseFieldProps) => {\n  const form = useContext(ctx)\n  const field = form.config.fields[name]\n\n  if (!field) return null\n  const state: any = field.state\n\n  return (\n    <PureSelect\n      items={state.items || []}\n      value={state.value}\n      onChange={(value) => {\n        set(form.db.data, name, value)\n\n        if (typeof state.onChange === 'function')\n          state.onChange(value, {\n            state: form,\n            row: form.db.data,\n            col: name,\n          })\n        internalChange(value)\n      }}\n    />\n  )\n}\n\nconst getEl = (row: any) => {\n  return typeof row === 'object' ? row.el : null\n}\nconst getLabel = (row: any) => {\n  return (typeof row === 'object' ? row.label || (row as any).text : row) + ''\n}\nconst getValue = (row: any) => {\n  return (typeof row === 'object' ? row.value || (row as any).key : row) + ''\n}\n\nexport const PureSelect = (props: {\n  value: string | number\n  onChange: (value: string | number) => void\n  onDropDown?: (value: string | number) => void\n  loading?: boolean\n  className?: any\n  items: (string | { value: string; label: string; el?: ReactElement })[]\n}) => {\n  const { items, value, loading, onDropDown, onChange } = props\n  const render = useRender()\n  const _ = useRef({\n    init: false,\n    label: '',\n    el: null,\n    open: false,\n    picked: false,\n    items: [] as (\n      | string\n      | { value: string; label: string; el?: ReactElement }\n    )[],\n    selectedIndex: -1,\n    ref: null as null | HTMLDivElement,\n    popout: null as null | HTMLDivElement,\n  })\n  const meta = _.current\n\n  useEffect(() => {\n    meta.items = items\n    let found = false\n    for (let [idx, row] of Object.entries(items)) {\n      if (getValue(row) == value) {\n        meta.selectedIndex = parseInt(idx)\n        meta.label = getLabel(row)\n        meta.el = getEl(row)\n        found = true\n        break\n      }\n    }\n    if (!found) {\n      meta.el = null\n      meta.label = ''\n    }\n    render()\n    meta.init = true\n\n    if (meta.open && meta.ref) {\n      const input = meta.ref.querySelector('input')\n      if (input) {\n        input.focus()\n        input.setSelectionRange(0, input.value.length)\n      }\n    }\n  }, [items, value])\n\n  if (!meta.init) return null\n\n  const focusSelected = () => {\n    waitUntil(() => meta.popout).then(() => {\n      if (meta.popout) {\n        const active = meta.popout.querySelector('.active')\n        if (active) active.scrollIntoView()\n      }\n    })\n  }\n\n  if (loading)\n    return (\n      <WBox className=\"pure-select\">\n        <div className=\"flex items-center\">\n          <Spinner />\n          <Label className=\"text-xs text-blue-300 ml-2\">Loading...</Label>\n        </div>\n      </WBox>\n    )\n\n  const list = meta.items.map((e) => {\n    if (typeof e === 'object') {\n      return {\n        el: e.el || null,\n        value: e.value || (e as any).key,\n        label: e.label || (e as any).text,\n      }\n    }\n    return {\n      el: null,\n      value: e,\n      label: e,\n    }\n  })\n\n  return (\n    <div\n      ref={(e) => {\n        if (e) {\n          meta.ref = e\n        }\n      }}\n      className={`${\n        props.className || ''\n      } pure-select flex flex-1  relative items-stretch`}\n      css={css`\n        > div {\n          flex: 1;\n        }\n        input {\n          cursor: pointer;\n        }\n      `}\n    >\n      <>\n        <Icon\n          iconName=\"ChevronDown\"\n          className=\"absolute bg-white bottom-0 top-0 flex items-center justify-center right-0 m-1 pointer-events-none z-10\"\n          css={css`\n            padding: 1px 8px;\n          `}\n        />\n        {meta.el && (\n          <div\n            className=\"absolute inset-0 z-10 pointer-events-none flex bg-white\"\n            css={css`\n              right: 40px;\n              margin: 2px;\n              label {\n                font-size: 14px;\n              }\n            `}\n          >\n            <Label className=\"flex-1 flex self-stretch items-center px-2\">\n              {meta.el}\n            </Label>\n          </div>\n        )}\n        <TextField\n          value={meta.label || ''}\n          spellCheck={false}\n          autoComplete=\"off\"\n          onFocus={(e) => {\n            e.target.setSelectionRange(0, e.target.value.length)\n            meta.el = null\n            render()\n          }}\n          onBlur={() => {\n            setTimeout(() => {\n              if (!meta.el && !meta.picked) {\n                meta.picked = false\n                let sel: any = ''\n                for (let i of items) {\n                  if (getValue(i) == value) sel = i\n                }\n\n                meta.open = false\n                if (sel && getLabel(sel) !== meta.label) {\n                  if (meta.items !== items) {\n                    meta.items = items\n                  }\n                  meta.label = getLabel(sel)\n                  meta.el = getEl(sel)\n                  render()\n                } else {\n                  meta.el = getEl(sel)\n                  render()\n                }\n              }\n            }, 500)\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'ArrowUp') {\n              if (!meta.open) {\n                meta.open = true\n                if (onDropDown) onDropDown(value)\n              }\n              e.preventDefault()\n              e.stopPropagation()\n              meta.selectedIndex =\n                meta.selectedIndex <= 0\n                  ? meta.items.length - 1\n                  : meta.selectedIndex - 1\n              render()\n\n              focusSelected()\n            } else if (e.key === 'ArrowDown') {\n              if (!meta.open) {\n                meta.open = true\n              }\n              e.preventDefault()\n              e.stopPropagation()\n              meta.selectedIndex =\n                meta.selectedIndex < meta.items.length - 1\n                  ? meta.selectedIndex + 1\n                  : 0\n\n              render()\n\n              focusSelected()\n            } else if (e.key === 'Enter') {\n              e.preventDefault()\n              e.stopPropagation()\n\n              if (!meta.open) {\n                meta.open = true\n                if (onDropDown) onDropDown(value)\n              } else {\n                meta.open = false\n                let sel = meta.items[meta.selectedIndex]\n                if (!sel) {\n                  sel = meta.items[0]\n                }\n\n                if (sel) {\n                  if (onChange) {\n                    onChange(getValue(sel))\n                  }\n                  meta.label = getLabel(sel)\n                }\n              }\n              render()\n            }\n          }}\n          onChange={(_, text) => {\n            if (typeof text === 'string') {\n              meta.open = true\n              if (onDropDown) onDropDown(value)\n              meta.label = text\n              meta.el = null\n              meta.items =\n                text.length > 0\n                  ? items.filter((row) => {\n                      return fuzzyMatch(meta.label, getLabel(row))\n                    })\n                  : items\n              render()\n            }\n          }}\n          onClick={() => {\n            meta.open = true\n            if (onDropDown) onDropDown(value)\n            render()\n\n            setTimeout(() => {\n              focusSelected()\n            }, 300)\n          }}\n        />\n      </>\n      {meta.open && meta.ref && (\n        <Callout\n          isBeakVisible={false}\n          target={meta.ref}\n          minPagePadding={2}\n          onDismiss={() => {\n            meta.open = false\n            render()\n          }}\n        >\n          <div\n            ref={(e) => {\n              if (e) meta.popout = e\n            }}\n            className=\"flex items-stretch flex-1\"\n            css={css`\n              width: ${meta.ref.offsetWidth}px;\n              min-width: 170px;\n              max-height: 300px;\n              ${meta.items.length === 0\n                ? css`\n                    min-height: 80px;\n                  `\n                : css`\n                    height: ${meta.items.length * 32}px;\n                  `}\n            `}\n          >\n            <BaseList\n              filter={false}\n              columns={({ row, index }) => {\n                return (\n                  <Label\n                    onClick={() => {\n                      meta.open = false\n                      meta.picked = true\n                      const value = row.value\n                      if (onChange) {\n                        onChange(value)\n                      }\n                      meta.label = row.label\n                      meta.el = row.el\n                      render()\n                    }}\n                    className={`flex flex-1 self-stretch px-2 cursor-pointer ${\n                      meta.selectedIndex === index ? 'active' : ''\n                    }`}\n                    css={css`\n                      &.active {\n                        background-color: #f0faf3;\n                        &::after {\n                          content: '\u2713';\n                          background: white;\n                          border-radius: 5px;\n                          border-top-right-radius: 0px;\n                          border-bottom-right-radius: 0px;\n                          color: green;\n                          padding: 0px 10px;\n                          position: absolute;\n                          right: 0px;\n                        }\n                      }\n                      &:hover {\n                        background-color: #e7f3fd;\n                      }\n                    `}\n                  >\n                    {row.el || row.label}\n                  </Label>\n                )\n              }}\n              list={list}\n            />\n          </div>\n        </Callout>\n      )}\n    </div>\n  )\n}\n\nexport const fuzzyMatch = function (needle, haystack) {\n  if (needle === '' || haystack === '') return true\n\n  needle = needle.toLowerCase().replace(/ /g, '')\n  haystack = haystack.toLowerCase()\n\n  // All characters in needle must be present in haystack\n  var j = 0 // haystack position\n  for (var i = 0; i < needle.length; i++) {\n    // Go down the haystack until we find the current needle character\n    while (needle[i] !== haystack[j]) {\n      j++\n\n      // If we reached the end of the haystack, then this is not a match\n      if (j === haystack.length) {\n        return false\n      }\n    }\n\n    // Here, needle character is same as haystack character\n    //console.log(needle + \":\" + i + \" === \" + haystack + \":\" + j);\n  }\n\n  // At this point, we have matched every single letter in the needle without returning false\n  return true\n}\n"],
  "mappings": "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",
  "names": []
}
